<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Computer Science :: MNP</title>
    <link>http://localhost:1313/computer-science/index.html</link>
    <description>This section wil cover posts about computer science, programming and devops.</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 23 Nov 2024 11:59:20 +0100</lastBuildDate>
    <atom:link href="http://localhost:1313/computer-science/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Fold me, fast</title>
      <link>http://localhost:1313/computer-science/fold_me_fast/index.html</link>
      <pubDate>Sat, 23 Nov 2024 11:59:20 +0100</pubDate>
      <guid>http://localhost:1313/computer-science/fold_me_fast/index.html</guid>
      <description>The Task It is not quite uncommon to have some time series data with some jitter in it. You might call these measurement errors (e.g. ADC jitter), disturbing signals (e.g. electro-magnetic interference), or just “fluctuation” in case it is a long term “trend” you’re interested in.&#xA;There are many ways to cope with that:&#xA;smoothing splines: taken from the octave documentation Kalman filters Moving avergage \begin{gather} y[n] = \frac{1}{N} \sum_{k=0}^{N-1} x[n-k] \end{gather} The latter is a rather simple to approach, but it bears a typical students trap that comes with some computational penalty: The naive approach of just summing up the samples within the window, then dividing to get the average, and ‘slide’ the window one sample to the right is time-consuming, and there are better ways to do this.</description>
    </item>
    <item>
      <title>Mage</title>
      <link>http://localhost:1313/computer-science/mage/index.html</link>
      <pubDate>Tue, 22 Oct 2024 10:56:25 +0200</pubDate>
      <guid>http://localhost:1313/computer-science/mage/index.html</guid>
      <description>About The Golang community is rather conservative, most smaller projects just get along with go build, some larger projects including Kubernetes, Prometheus, Terraform and Vault stick with the good old Makefile. But, that being said, a new player gets some attention, Mage and I would like to introduce it here and give some reasons why I like it. I also try to be fair and give some pros and cons for both Mage and Make tools, as I’m generally no fan of black-and-white pictures - but the article deals with Mage. What we show here is:</description>
    </item>
  </channel>
</rss>